name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
      branches: [ "master" ]
      
jobs:

  build:
    runs-on: ubuntu-latest
    steps:

      - name: Check out repository code
        uses: actions/checkout@v4
  
      - name: Increment version
        run: |
          version=$(grep -o '<version>.*</version>' pom.xml | head -n1 | sed 's/<[^>]*>//g')
          new_version=$(echo $version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
          sed -i "s/$version/$new_version/" pom.xml
          echo "export VERSION=$new_version"
          echo "New version is $VERSION"



      # - name: Build Docker Image
      #   run: |
      #       docker build --file ./docker/dockerfile --tag ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_CLIENT_REPO }}:latest .


      
      
      # - name: Login to Docker Hub
      #   uses: docker/login-action@v1
      #   with:
      #     username: ${{ secrets.DOCKER_USER }}
      #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
            
      # - name: Push to DockerHub
      #   run: docker push ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_CLIENT_REPO }}:latest
    
      
  # deploy:
  #   needs: build
  #   runs-on: ubuntu-latest

    # steps:
    # - name: Deploy Frontend
    #   uses: appleboy/ssh-action@master
    #   with:
    #     host: ${{ secrets.HOST_FRONTEND }}
    #     username: ${{ secrets.HOST_FRONTEND_USER }}
    #     key: ${{ secrets.PRIVATE_KEY }}
    #     port: ${{ secrets.PORT }}
    #     script_stop: true
    #     script: |
    #     sudo docker stop ${{ secrets.DOCKER_CLIENT_CONTAINER }}
    #     sudo docker rm ${{ secrets.DOCKER_CLIENT_CONTAINER }}
    #     sudo docker rmi ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_CLIENT_REPO }}
    #     sudo docker pull ${{ secrets.DOCKER_USER }}/${{ secrets.DOCKER_CLIENT_REPO }}
    #     sudo docker compose --file /opt/${{ secrets.APP_NAME }}/docker/docker-compose-client.yml --project-directory /opt/${{ secrets.APP_NAME }} up --detach
