name: CI

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'version.txt'
  pull_request:
      branches: [ "master" ]
      paths-ignore:
        - 'version.txt'
      
jobs:

  ci:
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository code
      uses: actions/checkout@v4
  

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
          

    - name: Build jar and Test
      run : |
        mvn -B -DskipTests clean package
        mvn test
        

    - name: Increment version
      run: |
        # Get the current version from the txt file
        base_version=$(cat version.txt)

        # Increase the patch part 
        new_version=$(echo $base_version | awk -F. '{$NF = $NF + 1} 1' | sed 's/ /./g')
        echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
    

    - name: Build Docker Image
      run: |
        echo "The new version is ${{ env.NEW_VERSION }}"
        docker build --file ./docker/dockerfile --tag ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:${{ env.NEW_VERSION }} .


    - name: Login to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ vars.DOCKER_USER }}
        password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          
        
    - name: Push to DockerHub
      run: |
        # Push with version tag
        docker push ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:${{ env.NEW_VERSION }} 
        
        # Push with latest tag
        image="${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:${{ env.NEW_VERSION }}"
        docker tag $image ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:latest
        docker push ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:latest


    - name: Update version
      run: |
        # Config git identity
        git config --local user.email "github-actions"
        git config --local user.name "github-actions"

        echo "The new version is ${{ env.NEW_VERSION }}"
        
        # Update the version.txt in the repo
        echo "${{ env.NEW_VERSION }}" > version.txt
        git add version.txt
        git commit -m "Update version.txt"
        git push
    