name: CI

on:
  push:
    branches: [ "master" ]
    # paths-ignore:
    #   - 'pom.xml'
  pull_request:
    branches: [ "master" ]
    # paths-ignore:
    #   - 'pom.xml'
      
jobs:

  ci:
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository code
      uses: actions/checkout@v4
  

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
          

    - name: Build jar and Test
      run : |
        mvn -B -DskipTests clean package
        mvn test
        

    - name: Increment version
      run: |
        # Get the current version from the pom file
        current_version=$(grep -o '<version>.*</version>' pom.xml | head -n1 | sed 's/<[^>]*>//g')

        # Increase the patch part
        new_version=$(echo $current_version | awk -F. '{$NF = $NF + 1} 1' | sed 's/ /./g')

        # Store version in environment
        echo "CURRENT_VERSION=$current_version" >> $GITHUB_ENV
        echo "NEW_VERSION=$new_version" >> $GITHUB_ENV
    

    # - name: Build Docker Image
    #   run: |
    #     echo "The new version is ${{ env.NEW_VERSION }}"
    #     docker build --file ./docker/dockerfile --tag ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:${{ env.NEW_VERSION }} .


    # - name: Login to Docker Hub
    #   uses: docker/login-action@v1
    #   with:
    #     username: ${{ vars.DOCKER_USER }}
    #     password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
          
        
    # - name: Push to DockerHub
    #   run: |
    #     # Push with version tag
    #     docker push ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:${{ env.NEW_VERSION }} 
        
    #     # Push with latest tag
    #     image="${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:${{ env.NEW_VERSION }}"
    #     docker tag $image ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:latest
    #     docker push ${{ vars.DOCKER_USER }}/${{ vars.DOCKER_REPO }}:latest


    - name: Update version
      run: |
        # Config git identity
        git config --local user.email "github-actions"
        git config --local user.name "github-actions"

        echo "The previous version is ${{ env.CURRENT_VERSION }}"
        echo "The new version is ${{ env.NEW_VERSION }}"
        
        # Update pom file and push to repo
        sed -i "s/${{ env.CURRENT_VERSION }}/${{ env.NEW_VERSION }}/" pom.xml
        git add pom.xml
        git commit -m "Update version.txt"
        git push
    